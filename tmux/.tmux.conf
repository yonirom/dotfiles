# Mouse mode
setw -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
#bind -t vi-copy    C-WheelUpPane   halfpage-up
#bind -t vi-copy    C-WheelDownPane halfpage-down

# Double control-a to switch between current and last window.
bind-key C-a display-panes
bind-key a send-prefix

# Rebind close window
bind q confirm kill-window

# Control-s to switch between current and last pane.
bind-key C-s last-window
bind-key Space next-window
bind-key n new-window

# Pane movement
bind-key M-z command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key M-x command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Layouts
bind-key M-a next-layout

# Rebind pane splitting
unbind %
bind | split-window -h
bind - split-window -v

# Configure terminal to use 256 colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set-option -g pane-active-border-fg green
set -g window-style 'fg=white,bg=colour234'
set -g window-active-style 'fg=white,bg=colour234'

# Vim-style pane navigation
bind  h  select-pane -L                                 # Select the pane to the left
bind  j  select-pane -D                                 # Select the pane below
bind  k  select-pane -U                                 # Select the pane above
bind  l  select-pane -R                                 # Select the pane to the right

bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 10

# Left status bar
set -g status-bg default
set -g status-left-fg colour235
set -g status-left-length 30
set -g status-left '#S'


############################################################################
# Status Bar
############################################################################
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
# Window status bars
#set -g window-status-current-format '#[fg=colour150,noreverse,bold] #I : #W '
#set -g window-status-format '#[fg=colour235] #I : #W '

# Right status bar
#set -g status-right '#[fg=black]%Y-%m-%d #[fg=white]%I:%M'

# Message
set -g message-bg colour235
set -g message-fg white

# Panes
set -g pane-active-border-fg colour20
set -g display-panes-time 3000

# indexes
set -g base-index 1
set -g pane-base-index 1

# Don't automatically rename windows
set -g automatic-rename off

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
source-file "${HOME}/.tmux/.tmux.theme"

# reload conf
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded!"

if-shell "uname | grep -q Darwin" "source-file ${HOME}/.tmux.osx"
